services:
  postgres-dev:
    container_name: sc-postgres-dev
    image: postgres:latest
    restart: always
    ports:
      - ${PGPORT}:${PGPORT}
    volumes:
      - ./backend/services/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DBNAME}
      - PGPORT=${PGPORT}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  kafka:
    container_name: sc-kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: "pYh_fJfISn2vQqW3xGvlTQ"

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

    volumes:
      - ./kafka-data:/var/lib/kafka/data
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics --bootstrap-server=localhost:9092 --list || exit 1",
        ]
      interval: 10s
      timeout: 10s
      retries: 5

  pub-sub:
    container_name: sc-pub-sub
    image: redis:8.0-M02-alpine
    restart: always
    ports:
      - "6379:6379"
